
services:
  controller:
    container_name: unifi
    depends_on:
      - unifi-mongo
    image: "jacobalberty/unifi:${TAG:-latest}"
    init: true
    restart: unless-stopped
    user: unifi

    volumes:
      - unifi-dir:/unifi
      - unifi-data:/unifi/data
      - unifi-log:/unifi/log
      - unifi-cert:/unifi/cert
      - unifi-init:/unifi/init.d
      - unifi-run:/var/run/unifi
      # Mount local folder for backups and autobackups
      # - ./backup:/unifi/data/backup

    environment:
      DB_URI: mongodb://mongo/unifi
      STATDB_URI: mongodb://mongo/unifi_stat
      DB_NAME: unifi
      UNIFI_URL: unifi.cattivi.com

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.entrypoints=http"
      - "traefik.http.routers.unifi.rule=Host(`${UNIFI_URL}`)"
      - "traefik.http.middlewares.unifi-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.unifi.middlewares=unifi-https-redirect"
      - "traefik.http.routers.unifi-secure.entrypoints=https"
      - "traefik.http.routers.unifi-secure.rule=Host(`${UNIFI_URL}`)"
      - "traefik.http.routers.unifi-secure.tls=true"
      # - "traefik.http.routers.unifi-secure.tls.certresolver=default"
      - "traefik.docker.network=proxy_network"
      - "traefik.http.routers.unifi-secure.service=unifi"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"

    networks:
      proxy_network:
        ipv4_address: 10.60.0.8

    ports:
      - "3478:3478/udp" # STUN
      - "6789:6789/tcp" # Speed test
      - "8080:8080/tcp" # Device/ controller comm.
      - "8443:8443/tcp" # Controller GUI/API as seen in a web browser
      - "8880:8880/tcp" # HTTP portal redirection
      - "8843:8843/tcp" # HTTPS portal redirection
      - "10001:10001/udp" # AP discovery

    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0

  unifi-mongo:
    image: mongo:3.6
    container_name: unifi_mongo
    restart: unless-stopped

    volumes:
      - unifi-db:/data/db
      - unifi-dbcfg:/data/configdb

    networks:
      proxy_network

  unifi-logs:
    image: bash
    container_name: unifi-logs
    depends_on:
      - controller
    restart: on-failure

    command: bash -c 'tail -F /unifi/log/*.log'

    networks:
      proxy_network

    volumes:
      - unifi-log:/unifi/log


networks:
 proxy_network:
   external: true

volumes:
  unifi-db:
  unifi-dbcfg:
  unifi-data:
  unifi-log:
  unifi-cert:
  unifi-init:
  unifi-dir:
  unifi-run:
