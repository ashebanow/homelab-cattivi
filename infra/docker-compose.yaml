# The Infra stack has services that underly our homelab:
# Traefik, MySQL, Hashicorp Vault, Cloudflare Tunnel, etc.

#####################################################################
networks:
  proxy_network:
    name: proxy_network
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.60.0.0/24
          gateway: 10.60.0.1
          aux_addresses: [
            auth 10.60.0.3
            reverse-proxy 10.60.0.4
            portainer 10.60.0.5
            portainer-agent-virt1 10.60.0.6
            portainer-agent-virt2 10.60.0.7
            unifi 10.60.0.8
            unifi-db 10.60.0.9
            rancher 10.60.0.10
            netboot 10.60.0.11
          ]

#####################################################################
services:
  reverse-proxy:
    container_name: reverse-proxy
    hostname: reverse-proxy
    image: traefik:v2.10.4
    restart: unless-stopped

    environment:
      - BASIC_AUTH_PASSWORD_HASH=${BASIC_AUTH_PASSWORD_HASH}
      - BASIC_AUTH_USER=${BASIC_AUTH_USER}
      - CLOUDFLARE_DNS_API_TOKEN="${CLOUDFLARE_DNS_API_TOKEN}"
      - CLOUDFLARE_EMAIL="${CLOUDFLARE_EMAIL}"
      - TZ=${TZ}

    # extra_hosts:
    #   - storage.docker.internal:10.50.0.123

    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 15s
      retries: 3

    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`reverse-proxy.cattivi.com`) # Define the subdomain for the traefik dashboard.
      - traefik.http.routers.api.service=api@internal # Enable Traefik API.
      # protect dashboard with basic auth and restrict access to private class subnets only:
      - traefik.http.routers.api.middlewares=local-ipwhitelist@file,basic-auth@file
      - traefik.http.middlewares.basic-auth-global.basicauth.users=${BASIC_AUTH_USER}:${BASIC_AUTH_PASSWORD_HASH}

    networks:
      proxy_network:
        ipv4_address: 10.60.0.4

    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 8080:8080 # MGMT WEB UI

    security_opt:
      - no-new-privileges:true

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./traefik-data:/etc/traefik
      - /mnt/cache/appdata/traefik/data:/etc/traefik
      # - ./traefik-logs:/logs
      - /mnt/cache/appdata/traefik/logs:/logs
      - ./certs/acme-production.json:/etc/traefik/certs/acme-production.json
      - ./certs/acme-staging.json:/etc/traefik/certs/acme-staging.json
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ./traefik-file-watcher.yaml:/etc/traefik/file-watcher.yaml

  #####################################################################
  vault:
    container_name: vault
    hostname: vault
    image: hashicorp/vault:1.15
    restart: unless-stopped

    cap_add:
      - IPC_LOCK

    command: ["server", "-config=/etc/vault/vault.hcl", "${VAULT_ROOT_TOKEN}"]

    environment:
      - TZ="America/Los_Angeles"

    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.vault.rule=Host(`vault.cattivi.com`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.service=web"
      # - "traefik.http.routers.web.tls.certresolver=default"
      - "traefik.http.services.vault.loadbalancer.server.port=443"
      - "net.unraid.docker.icon=https://raw.githubusercontent.com/KasteM34/unraid-templates/main/vault/vault.png"
      - "net.unraid.docker.webui='http://10.60.0.24::8200/ui"

    networks:
      proxy_network:
        ipv4_address: 10.60.0.24

    ports:
      - 8200:8200

    volumes:
      - ./vault.hcl:/etc/vault/vault.hcl
      - "/mnt/cache/appdata/vault/file/:/vault/file:rw"
      - "/mnt/cache/appdata/vault/logs/:/vault/logs:rw"

  #####################################################################
  mysql:
    container_name: mysql
    hostname: mysql
    image: mariadb:latest
    restart: unless-stopped

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${MYSQL_DATABASE}
      # MYSQL_USER: "${MYSQL_USER}"
      # MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    networks:
      proxy_network:
        ipv4_address: 10.60.0.21

    volumes:
      # - ./mysql-data:/var/lib/mysql
      - /mnt/cache/appdata/mysql:/var/lib/mysql

  #####################################################################
  # Based largely on https://github.com/jonas-merkle/container-cloudflare-tunnel
  cloudflare-tunnel:
    image: cloudflare/cloudflared
    container_name: cloudflare-tunnel
    hostname: cloudflare-tunnel
    restart: unless-stopped
    network_mode: "host"
    command: tunnel run
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/cache/appdata/cloudflare-tunnel/data:/home/nonroot/.cloudflared/
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}

  #####################################################################
  # Based largely on https://github.com/netbootxyz/docker-netbootxyz/blob/master/docker-compose.yml.example
  netboot:
    image: ghcr.io/netbootxyz/netbootxyz
    container_name: netboot
    # environment:
      # - MENU_VERSION=2.0.47 # optional
    networks:
      proxy_network:
        ipv4_address: 10.60.0.25
    volumes:
      - ./netboot_config:/config # optional
      - ./netboot_assets:/assets # optional
    ports:
      - 1080:3000       # web admin port
      - 69:69/udp
      # - 1080:80       # optional nginx for asset serving
    restart: unless-stopped
