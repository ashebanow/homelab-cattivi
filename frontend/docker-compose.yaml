# The Frontend stack has web servers and services that are
# exposed to the public.

services:

  #####################################################################
  web:
    container_name: web
    hostname: web
    image: caddy:latest
    restart: unless-stopped

    environment:
      DOMAIN: "https://cattivi.com"  
      EMAIL: "ashebanow@cattivi.com"                 
      LOG_FILE: "/data/access.log"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.cattivi.com`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.service=web"
      # - "traefik.http.routers.web.tls.certresolver=default"
      - "traefik.http.services.web.loadbalancer.server.port=443"

    networks:
      proxy_network:
        ipv4_address: 10.60.0.5

    ports:
      # - "2019:2019" # admin port
      - "5080:80"     # we should just stop publishing 80 and 443, rely on reverse-proxy
      - "5443:443"
      - "5443:443/udp"

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-site:/srv
      - /mnt/cache/appdata/web/data:/data
      - /mnt/cache/appdata/web/config:/config
      - /mnt/cache/appdata/web/test_code:/wdata
      # - ./caddy-data:/data
      # - ./caddy-config:/config
      # - ./caddy-test_code:/wdata

  #####################################################################
  reverse-proxy:
    container_name: reverse-proxy
    hostname: reverse-proxy
    image: traefik:v2.10.4
    restart: unless-stopped

    environment:
      - BASIC_AUTH_PASSWORD_HASH=${BASIC_AUTH_PASSWORD_HASH}
      - BASIC_AUTH_USER=${BASIC_AUTH_USER}
      - CLOUDFLARE_DNS_API_TOKEN="${CLOUDFLARE_DNS_API_TOKEN}"
      - CLOUDFLARE_EMAIL="${CLOUDFLARE_EMAIL}"
      - TZ=${TZ}

    extra_hosts:
      - storage.docker.internal:10.50.0.70

    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 15s
      retries: 3

    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`reverse-proxy.cattivi.com`) # Define the subdomain for the traefik dashboard.
      - traefik.http.routers.api.service=api@internal # Enable Traefik API.
      # protect dashboard with basic auth and restrict access to private class subnets only:
      - traefik.http.routers.api.middlewares=local-ipwhitelist@file,basic-auth@file
      - traefik.http.middlewares.basic-auth-global.basicauth.users=${BASIC_AUTH_USER}:${BASIC_AUTH_PASSWORD_HASH}

    networks:
      proxy_network:
        ipv4_address: 10.60.0.4

    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 8080:8080 # MGMT WEB UI

    security_opt:
      - no-new-privileges:true

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./traefik-data:/etc/traefik
      - /mnt/cache/appdata/traefik/data:/etc/traefik
      # - ./traefik-logs:/logs
      - /mnt/cache/appdata/traefik/logs:/logs
      - ./certs/acme-production.json:/etc/traefik/certs/acme-production.json
      - ./certs/acme-staging.json:/etc/traefik/certs/acme-staging.json
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ./traefik-file-watcher.yaml:/etc/traefik/file-watcher.yaml

#####################################################################
networks:
 proxy_network:
   external: true