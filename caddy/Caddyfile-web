{
  # Enable Debug mode
  debug

  # Disable admin API
  admin off

  # we don't want  https forced, since all our external requests
  # come from cloudflare tunnel which has its own cert management.
  auto_https off
  email ashebanow@cattivi.com
  # acme_dns cloudflare {env.CF_DNS_API_TOKEN}
  # # Optional staging lets encrypt for testing. Comment out for production.
  # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
}

# Caddy snippet to be used with subdomains to block all traffic
# that is not originated from Cloudflare.
#
# This is designed to block harmful knocking and IP scanning bot traffic.
#
# # Generate remote_ip list with cloudflare-ip-list.sh
(cloudflare-only) {
  # Update IPs here from the shell script output
  @blocked not remote_ip 103.21.244.0/22 103.22.200.0/22 103.31.4.0/22 104.16.0.0/13 104.24.0.0/14 108.162.192.0/18 131.0.72.0/22 141.101.64.0/18 162.158.0.0/15 172.64.0.0/13 173.245.48.0/20 188.114.96.0/20 190.93.240.0/20 197.234.240.0/22 198.41.128.0/17 2400:cb00::/32 2405:8100::/32 2405:b500::/32 2606:4700::/32 2803:f800::/32 2a06:98c0::/29 2c0f:f248::/32
  respond @blocked "<h1>HTTP/HTTPS access through Cloudflare only</h1>" 403
}

http://cattivi.com {
  # import cloudflare-only

  # https://caddyserver.com/docs/caddyfile/directives/push
  push

  # https://caddyserver.com/docs/caddyfile/directives/metrics
  metrics /metrics

  root * /srv
 
  # Templates give static sites some dynamic features
  templates

  # https://caddyserver.com/docs/caddyfile/directives/encode
  encode gzip zstd

  # Make HTML file extension optional
  try_files {path}.html {path}
 
  # Serve everything else from the file system
  file_server

  # https://caddyserver.com/docs/caddyfile/directives/header
  header {
    # Hide "Server: Caddy"
    -Server
    
    # prevent attacks such as Cross Site Scripting (XSS)
    Content-Security-Policy default-src 'self' *.cattivi.com
    
    # enable the cross-site scripting (XSS) filter built into modern web browsers
    X-XSS-Protection 1; mode=block

    # ensures the connection cannot be establish through an insecure HTTP connection 
    # Strict-Transport-Security max-age=31536000; includeSubDomains; preload

    # clickjacking protection
    X-Frame-Options DENY

    # provides clickjacking protection. Disable iframes
    X-Frame-Options: SAMEORIGIN

    # disable clients from sniffing the media type
    X-Content-Type-Options nosniff

    # keep referrer data off of HTTP connections
    Referrer-Policy no-referrer-when-downgrade
  }

  # https://caddyserver.com/docs/caddyfile/directives/respond
  # Replace backends health checks and provide one for this LB
  respond /health 200
  
  # https://caddyserver.com/docs/caddyfile/directives/log
  log {
    output file /var/log/access.log {
      roll_size 500mb
      roll_keep 5
      roll_keep_for 720h
    }
  }
}
